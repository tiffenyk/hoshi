/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    tags: Tag;
    users: User;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'categories';
                  value: string | Category;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (string | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  color?:
    | (
        | 'slate'
        | 'gray'
        | 'zinc'
        | 'neutral'
        | 'stone'
        | 'red'
        | 'orange'
        | 'amber'
        | 'yellow'
        | 'lime'
        | 'green'
        | 'emerald'
        | 'teal'
        | 'cyan'
        | 'sky'
        | 'blue'
        | 'indigo'
        | 'violet'
        | 'purple'
        | 'fuchsia'
        | 'pink'
        | 'rose'
        | 'white'
        | 'black'
      )
    | null;
  icon?:
    | (
        | 'flowbite:add-column-after-outline'
        | 'flowbite:add-column-before-outline'
        | 'flowbite:address-book-outline'
        | 'flowbite:address-book-solid'
        | 'flowbite:adjustments-horizontal-outline'
        | 'flowbite:adjustments-horizontal-solid'
        | 'flowbite:adjustments-vertical-outline'
        | 'flowbite:adjustments-vertical-solid'
        | 'flowbite:align-center-outline'
        | 'flowbite:align-center-solid'
        | 'flowbite:align-justify-outline'
        | 'flowbite:align-left-outline'
        | 'flowbite:align-right-outline'
        | 'flowbite:angle-down-outline'
        | 'flowbite:angle-left-outline'
        | 'flowbite:angle-right-outline'
        | 'flowbite:angle-up-outline'
        | 'flowbite:annotation-outline'
        | 'flowbite:annotation-solid'
        | 'flowbite:api-key-outline'
        | 'flowbite:apple-solid'
        | 'flowbite:archive-arrow-down-outline'
        | 'flowbite:archive-arrow-down-solid'
        | 'flowbite:archive-outline'
        | 'flowbite:archive-solid'
        | 'flowbite:arrow-down-outline'
        | 'flowbite:arrow-down-to-bracket-outline'
        | 'flowbite:arrow-down-to-bracket-solid'
        | 'flowbite:arrow-left-outline'
        | 'flowbite:arrow-left-solid'
        | 'flowbite:arrow-left-to-bracket-outline'
        | 'flowbite:arrow-left-to-bracket-solid'
        | 'flowbite:arrow-right-alt-outline'
        | 'flowbite:arrow-right-alt-solid'
        | 'flowbite:arrow-right-arrow-left-solid'
        | 'flowbite:arrow-right-outline'
        | 'flowbite:arrow-right-solid'
        | 'flowbite:arrow-right-to-bracket-outline'
        | 'flowbite:arrow-right-to-bracket-solid'
        | 'flowbite:arrow-sort-letters-outline'
        | 'flowbite:arrow-sort-letters-solid'
        | 'flowbite:arrow-up-down-outline'
        | 'flowbite:arrow-up-down-solid'
        | 'flowbite:arrow-up-from-bracket-outline'
        | 'flowbite:arrow-up-outline'
        | 'flowbite:arrow-up-right-down-left-outline'
        | 'flowbite:arrow-up-right-down-left-solid'
        | 'flowbite:arrow-up-right-from-square-outline'
        | 'flowbite:arrow-up-right-from-square-solid'
        | 'flowbite:arrow-up-solid'
        | 'flowbite:arrows-repeat-count-outline'
        | 'flowbite:arrows-repeat-outline'
        | 'flowbite:atom-outline'
        | 'flowbite:atom-solid'
        | 'flowbite:award-outline'
        | 'flowbite:award-solid'
        | 'flowbite:aws-solid'
        | 'flowbite:backward-step-outline'
        | 'flowbite:backward-step-solid'
        | 'flowbite:badge-check-outline'
        | 'flowbite:badge-check-solid'
        | 'flowbite:ban-outline'
        | 'flowbite:barcode-outline'
        | 'flowbite:bars-from-left-outline'
        | 'flowbite:bars-outline'
        | 'flowbite:battery-outline'
        | 'flowbite:battery-solid'
        | 'flowbite:bed-outline'
        | 'flowbite:bed-solid'
        | 'flowbite:bell-active-alt-outline'
        | 'flowbite:bell-active-alt-solid'
        | 'flowbite:bell-active-outline'
        | 'flowbite:bell-active-solid'
        | 'flowbite:bell-outline'
        | 'flowbite:bell-ring-outline'
        | 'flowbite:bell-ring-solid'
        | 'flowbite:bell-solid'
        | 'flowbite:bitcoin-solid'
        | 'flowbite:blender-phone-outline'
        | 'flowbite:blender-phone-solid'
        | 'flowbite:book-open-outline'
        | 'flowbite:book-open-reader-outline'
        | 'flowbite:book-open-reader-solid'
        | 'flowbite:book-open-solid'
        | 'flowbite:book-outline'
        | 'flowbite:book-solid'
        | 'flowbite:bookmark-outline'
        | 'flowbite:bookmark-solid'
        | 'flowbite:booth-curtain-outline'
        | 'flowbite:booth-curtain-solid'
        | 'flowbite:brain-outline'
        | 'flowbite:brain-solid'
        | 'flowbite:briefcase-outline'
        | 'flowbite:briefcase-solid'
        | 'flowbite:bug-outline'
        | 'flowbite:bug-solid'
        | 'flowbite:building-outline'
        | 'flowbite:building-solid'
        | 'flowbite:bullhorn-outline'
        | 'flowbite:bullhorn-solid'
        | 'flowbite:calendar-edit-outline'
        | 'flowbite:calendar-edit-solid'
        | 'flowbite:calendar-month-outline'
        | 'flowbite:calendar-month-solid'
        | 'flowbite:calendar-plus-outline'
        | 'flowbite:calendar-plus-solid'
        | 'flowbite:calendar-week-outline'
        | 'flowbite:calendar-week-solid'
        | 'flowbite:camera-foto-outline'
        | 'flowbite:camera-foto-solid'
        | 'flowbite:camera-photo-outline'
        | 'flowbite:camera-photo-solid'
        | 'flowbite:caption-outline'
        | 'flowbite:caption-solid'
        | 'flowbite:captioning-outline'
        | 'flowbite:captioning-solid'
        | 'flowbite:caret-down-outline'
        | 'flowbite:caret-down-solid'
        | 'flowbite:caret-left-outline'
        | 'flowbite:caret-left-solid'
        | 'flowbite:caret-right-outline'
        | 'flowbite:caret-right-solid'
        | 'flowbite:caret-sort-outline'
        | 'flowbite:caret-sort-solid'
        | 'flowbite:caret-up-outline'
        | 'flowbite:caret-up-solid'
        | 'flowbite:cart-outline'
        | 'flowbite:cart-plus-alt-outline'
        | 'flowbite:cart-plus-alt-solid'
        | 'flowbite:cart-plus-outline'
        | 'flowbite:cart-plus-solid'
        | 'flowbite:cart-solid'
        | 'flowbite:cash-outline'
        | 'flowbite:cash-register-outline'
        | 'flowbite:cash-register-solid'
        | 'flowbite:cash-solid'
        | 'flowbite:cell-attributes-outline'
        | 'flowbite:chalkboard-outline'
        | 'flowbite:chalkboard-solid'
        | 'flowbite:chalkboard-user-outline'
        | 'flowbite:chalkboard-user-solid'
        | 'flowbite:chart-line-down-outline'
        | 'flowbite:chart-line-up-outline'
        | 'flowbite:chart-line-up-solid'
        | 'flowbite:chart-mixed-dollar-outline'
        | 'flowbite:chart-mixed-dollar-solid'
        | 'flowbite:chart-mixed-outline'
        | 'flowbite:chart-outline'
        | 'flowbite:chart-pie-outline'
        | 'flowbite:chart-pie-solid'
        | 'flowbite:chart-solid'
        | 'flowbite:check-circle-outline'
        | 'flowbite:check-circle-solid'
        | 'flowbite:check-outline'
        | 'flowbite:check-plus-circle-outline'
        | 'flowbite:check-plus-circle-solid'
        | 'flowbite:check-solid'
        | 'flowbite:chevron-double-down-outline'
        | 'flowbite:chevron-double-left-outline'
        | 'flowbite:chevron-double-right-outline'
        | 'flowbite:chevron-double-up-outline'
        | 'flowbite:chevron-down-outline'
        | 'flowbite:chevron-left-outline'
        | 'flowbite:chevron-right-outline'
        | 'flowbite:chevron-sort-outline'
        | 'flowbite:chevron-up-outline'
        | 'flowbite:circle-minus-outline'
        | 'flowbite:circle-minus-solid'
        | 'flowbite:circle-pause-outline'
        | 'flowbite:circle-pause-solid'
        | 'flowbite:circle-plus-outline'
        | 'flowbite:circle-plus-solid'
        | 'flowbite:clapperboard-play-outline'
        | 'flowbite:clapperboard-play-solid'
        | 'flowbite:clipboard-check-outline'
        | 'flowbite:clipboard-check-solid'
        | 'flowbite:clipboard-clean-outline'
        | 'flowbite:clipboard-clean-solid'
        | 'flowbite:clipboard-list-outline'
        | 'flowbite:clipboard-list-solid'
        | 'flowbite:clipboard-outline'
        | 'flowbite:clipboard-solid'
        | 'flowbite:clock-arrow-outline'
        | 'flowbite:clock-outline'
        | 'flowbite:clock-solid'
        | 'flowbite:close-circle-outline'
        | 'flowbite:close-circle-solid'
        | 'flowbite:close-outline'
        | 'flowbite:close-sidebar-alt-outline'
        | 'flowbite:close-sidebar-alt-solid'
        | 'flowbite:close-sidebar-outline'
        | 'flowbite:close-sidebar-solid'
        | 'flowbite:close-solid'
        | 'flowbite:cloud-arrow-up-outline'
        | 'flowbite:cloud-arrow-up-solid'
        | 'flowbite:code-branch-outline'
        | 'flowbite:code-branch-solid'
        | 'flowbite:code-fork-outline'
        | 'flowbite:code-fork-solid'
        | 'flowbite:code-merge-outline'
        | 'flowbite:code-merge-solid'
        | 'flowbite:code-outline'
        | 'flowbite:code-pull-request-outline'
        | 'flowbite:code-pull-request-solid'
        | 'flowbite:code-solid'
        | 'flowbite:cog-outline'
        | 'flowbite:cog-solid'
        | 'flowbite:column-outline'
        | 'flowbite:column-solid'
        | 'flowbite:command-outline'
        | 'flowbite:command-solid'
        | 'flowbite:compress-outline'
        | 'flowbite:computer-speaker-outline'
        | 'flowbite:computer-speaker-solid'
        | 'flowbite:credit-card-outline'
        | 'flowbite:credit-card-plus-alt-outline'
        | 'flowbite:credit-card-plus-alt-solid'
        | 'flowbite:credit-card-plus-outline'
        | 'flowbite:credit-card-plus-solid'
        | 'flowbite:credit-card-solid'
        | 'flowbite:css-solid'
        | 'flowbite:database-outline'
        | 'flowbite:database-solid'
        | 'flowbite:delete-column-outline'
        | 'flowbite:delete-row-outline'
        | 'flowbite:delete-table-outline'
        | 'flowbite:desktop-pc-outline'
        | 'flowbite:desktop-pc-solid'
        | 'flowbite:discord-solid'
        | 'flowbite:dna-outline'
        | 'flowbite:dollar-outline'
        | 'flowbite:dollar-solid'
        | 'flowbite:dots-horizontal-outline'
        | 'flowbite:dots-horizontal-solid'
        | 'flowbite:dots-vertical-outline'
        | 'flowbite:dots-vertical-solid'
        | 'flowbite:download-outline'
        | 'flowbite:download-solid'
        | 'flowbite:draw-square-outline'
        | 'flowbite:draw-square-solid'
        | 'flowbite:dribbble-solid'
        | 'flowbite:dropbox-solid'
        | 'flowbite:edit-outline'
        | 'flowbite:edit-solid'
        | 'flowbite:envelope-open-outline'
        | 'flowbite:envelope-open-solid'
        | 'flowbite:envelope-outline'
        | 'flowbite:envelope-solid'
        | 'flowbite:euro-outline'
        | 'flowbite:euro-solid'
        | 'flowbite:exclamation-circle-outline'
        | 'flowbite:exclamation-circle-solid'
        | 'flowbite:expand-outline'
        | 'flowbite:expand-solid'
        | 'flowbite:eye-outline'
        | 'flowbite:eye-slash-outline'
        | 'flowbite:eye-slash-solid'
        | 'flowbite:eye-solid'
        | 'flowbite:face-explode-outline'
        | 'flowbite:face-explode-solid'
        | 'flowbite:face-grin-outline'
        | 'flowbite:face-grin-solid'
        | 'flowbite:face-grin-stars-outline'
        | 'flowbite:face-grin-stars-solid'
        | 'flowbite:face-laugh-outline'
        | 'flowbite:face-laugh-solid'
        | 'flowbite:facebook-solid'
        | 'flowbite:file-chart-bar-outline'
        | 'flowbite:file-chart-bar-solid'
        | 'flowbite:file-check-outline'
        | 'flowbite:file-check-solid'
        | 'flowbite:file-circle-plus-outline'
        | 'flowbite:file-circle-plus-solid'
        | 'flowbite:file-clone-outline'
        | 'flowbite:file-clone-solid'
        | 'flowbite:file-code-outline'
        | 'flowbite:file-code-solid'
        | 'flowbite:file-copy-alt-outline'
        | 'flowbite:file-copy-alt-solid'
        | 'flowbite:file-copy-outline'
        | 'flowbite:file-copy-solid'
        | 'flowbite:file-csv-outline'
        | 'flowbite:file-csv-solid'
        | 'flowbite:file-doc-outline'
        | 'flowbite:file-doc-solid'
        | 'flowbite:file-export-outline'
        | 'flowbite:file-export-solid'
        | 'flowbite:file-icvoice-solid'
        | 'flowbite:file-image-outline'
        | 'flowbite:file-image-solid'
        | 'flowbite:file-import-outline'
        | 'flowbite:file-import-solid'
        | 'flowbite:file-invoice-outline'
        | 'flowbite:file-invoice-solid'
        | 'flowbite:file-lines-outline'
        | 'flowbite:file-lines-solid'
        | 'flowbite:file-music-outline'
        | 'flowbite:file-music-solid'
        | 'flowbite:file-outline'
        | 'flowbite:file-paste-outline'
        | 'flowbite:file-paste-solid'
        | 'flowbite:file-pdf-outline'
        | 'flowbite:file-pdf-solid'
        | 'flowbite:file-pen-outline'
        | 'flowbite:file-pen-solid'
        | 'flowbite:file-ppt-outline'
        | 'flowbite:file-ppt-solid'
        | 'flowbite:file-search-outline'
        | 'flowbite:file-search-solid'
        | 'flowbite:file-shield-outline'
        | 'flowbite:file-shield-solid'
        | 'flowbite:file-solid'
        | 'flowbite:file-video-outline'
        | 'flowbite:file-video-solid'
        | 'flowbite:file-word-outline'
        | 'flowbite:file-word-solid'
        | 'flowbite:file-zip-outline'
        | 'flowbite:file-zip-solid'
        | 'flowbite:filter-dollar-outline'
        | 'flowbite:filter-dollar-solid'
        | 'flowbite:filter-outline'
        | 'flowbite:filter-solid'
        | 'flowbite:fingerprint-outline'
        | 'flowbite:fingerprint-solid'
        | 'flowbite:fire-outline'
        | 'flowbite:fire-solid'
        | 'flowbite:fix-tables-outline'
        | 'flowbite:flag-outline'
        | 'flowbite:flag-solid'
        | 'flowbite:floppy-disk-alt-outline'
        | 'flowbite:floppy-disk-alt-solid'
        | 'flowbite:floppy-disk-outline'
        | 'flowbite:floppy-disk-solid'
        | 'flowbite:flowbite-solid'
        | 'flowbite:folder-arrow-right-outline'
        | 'flowbite:folder-arrow-right-solid'
        | 'flowbite:folder-duplicate-outline'
        | 'flowbite:folder-duplicate-solid'
        | 'flowbite:folder-open-outline'
        | 'flowbite:folder-open-solid'
        | 'flowbite:folder-outline'
        | 'flowbite:folder-plus-outline'
        | 'flowbite:folder-plus-solid'
        | 'flowbite:folder-solid'
        | 'flowbite:font-color-alt-solid'
        | 'flowbite:font-color-outline'
        | 'flowbite:font-family-outline'
        | 'flowbite:font-highlight-outline'
        | 'flowbite:forward-outline'
        | 'flowbite:forward-solid'
        | 'flowbite:forward-step-outline'
        | 'flowbite:forward-step-solid'
        | 'flowbite:gift-box-outline'
        | 'flowbite:gift-box-solid'
        | 'flowbite:github-solid'
        | 'flowbite:gitlab-solid'
        | 'flowbite:globe-outline'
        | 'flowbite:globe-solid'
        | 'flowbite:go-to-next-cell-outline'
        | 'flowbite:go-to-prev-cell-outline'
        | 'flowbite:google-solid'
        | 'flowbite:graduation-cap-outline'
        | 'flowbite:graduation-cap-solid'
        | 'flowbite:grid-outline'
        | 'flowbite:grid-plus-outline'
        | 'flowbite:grid-plus-solid'
        | 'flowbite:grid-solid'
        | 'flowbite:hammer-outline'
        | 'flowbite:hammer-solid'
        | 'flowbite:headphones-outline'
        | 'flowbite:headphones-solid'
        | 'flowbite:heart-outline'
        | 'flowbite:heart-solid'
        | 'flowbite:home-outline'
        | 'flowbite:home-solid'
        | 'flowbite:horizontal-lines-outline'
        | 'flowbite:hourglass-outline'
        | 'flowbite:hourglass-solid'
        | 'flowbite:html-solid'
        | 'flowbite:image-outline'
        | 'flowbite:image-solid'
        | 'flowbite:inbox-full-outline'
        | 'flowbite:inbox-full-solid'
        | 'flowbite:inbox-outline'
        | 'flowbite:inbox-solid'
        | 'flowbite:incoming-call-outline'
        | 'flowbite:incoming-call-solid'
        | 'flowbite:indent-outline'
        | 'flowbite:indent-solid'
        | 'flowbite:info-circle-outline'
        | 'flowbite:info-circle-solid'
        | 'flowbite:insert-row-after-outline'
        | 'flowbite:insert-row-before-outline'
        | 'flowbite:insert-table-alt-outline'
        | 'flowbite:insert-table-outline'
        | 'flowbite:instagram-solid'
        | 'flowbite:keyboard-outline'
        | 'flowbite:keyboard-solid'
        | 'flowbite:label-outline'
        | 'flowbite:label-solid'
        | 'flowbite:landmark-outline'
        | 'flowbite:landmark-solid'
        | 'flowbite:language-outline'
        | 'flowbite:laptop-code-outline'
        | 'flowbite:laptop-code-solid'
        | 'flowbite:laptop-file-outline'
        | 'flowbite:laptop-file-solid'
        | 'flowbite:laravel-solid'
        | 'flowbite:layers-outline'
        | 'flowbite:layers-solid'
        | 'flowbite:letter-bold-outline'
        | 'flowbite:letter-bold-solid'
        | 'flowbite:letter-italic-outline'
        | 'flowbite:letter-italic-solid'
        | 'flowbite:letter-underline-outline'
        | 'flowbite:letter-underline-solid'
        | 'flowbite:life-saver-outline'
        | 'flowbite:life-saver-solid'
        | 'flowbite:lightbulb-outline'
        | 'flowbite:lightbulb-solid'
        | 'flowbite:link-break-outline'
        | 'flowbite:link-outline'
        | 'flowbite:link-solid'
        | 'flowbite:linkedin-solid'
        | 'flowbite:list-music-outline'
        | 'flowbite:list-music-solid'
        | 'flowbite:list-outline'
        | 'flowbite:list-solid'
        | 'flowbite:lock-open-outline'
        | 'flowbite:lock-open-solid'
        | 'flowbite:lock-outline'
        | 'flowbite:lock-solid'
        | 'flowbite:lock-time-outline'
        | 'flowbite:lock-time-solid'
        | 'flowbite:magic-wand-outline'
        | 'flowbite:magic-wand-solid'
        | 'flowbite:mail-box-outline'
        | 'flowbite:mail-box-solid'
        | 'flowbite:map-location-outline'
        | 'flowbite:map-pin-alt-outline'
        | 'flowbite:map-pin-alt-solid'
        | 'flowbite:map-pin-outline'
        | 'flowbite:map-pin-solid'
        | 'flowbite:mastercard-solid'
        | 'flowbite:merge-cells-outline'
        | 'flowbite:merge-or-split-outline'
        | 'flowbite:message-caption-outline'
        | 'flowbite:message-caption-solid'
        | 'flowbite:message-dots-outline'
        | 'flowbite:message-dots-solid'
        | 'flowbite:messages-outline'
        | 'flowbite:messages-solid'
        | 'flowbite:microphone-outline'
        | 'flowbite:microphone-slash-outline'
        | 'flowbite:microphone-slash-solid'
        | 'flowbite:microphone-solid'
        | 'flowbite:microscope-outline'
        | 'flowbite:microscope-solid'
        | 'flowbite:minimize-outline'
        | 'flowbite:minimize-solid'
        | 'flowbite:minus-outline'
        | 'flowbite:missed-call-outline'
        | 'flowbite:missed-call-solid'
        | 'flowbite:mobile-phone-outline'
        | 'flowbite:mobile-phone-solid'
        | 'flowbite:mongo-db-solid'
        | 'flowbite:moon-outline'
        | 'flowbite:moon-plus-outline'
        | 'flowbite:moon-plus-solid'
        | 'flowbite:moon-solid'
        | 'flowbite:music-alt-outline'
        | 'flowbite:music-alt-solid'
        | 'flowbite:music-outline'
        | 'flowbite:music-solid'
        | 'flowbite:newspaper-outline'
        | 'flowbite:newspaper-solid'
        | 'flowbite:newspapper-outline'
        | 'flowbite:newspapper-solid'
        | 'flowbite:npm-solid'
        | 'flowbite:objects-column-outline'
        | 'flowbite:objects-column-solid'
        | 'flowbite:open-door-outline'
        | 'flowbite:open-door-solid'
        | 'flowbite:open-sidebar-alt-outline'
        | 'flowbite:open-sidebar-alt-solid'
        | 'flowbite:open-sidebar-outline'
        | 'flowbite:open-sidebar-solid'
        | 'flowbite:ordered-list-outline'
        | 'flowbite:ordored-list-outline'
        | 'flowbite:ordored-list-solid'
        | 'flowbite:outdent-outline'
        | 'flowbite:outdent-solid'
        | 'flowbite:outgoing-call-outline'
        | 'flowbite:outgoing-call-solid'
        | 'flowbite:palette-outline'
        | 'flowbite:palette-solid'
        | 'flowbite:paper-clip-outline'
        | 'flowbite:paper-plane-outline'
        | 'flowbite:paper-plane-solid'
        | 'flowbite:papper-plane-solid'
        | 'flowbite:paragraph-outline'
        | 'flowbite:paragraph-solid'
        | 'flowbite:pause-outline'
        | 'flowbite:pause-solid'
        | 'flowbite:pen-nib-outline'
        | 'flowbite:pen-nib-solid'
        | 'flowbite:pen-outline'
        | 'flowbite:pen-solid'
        | 'flowbite:person-chalkboard-outline'
        | 'flowbite:person-chalkboard-solid'
        | 'flowbite:phone-hangup-outline'
        | 'flowbite:phone-hangup-solid'
        | 'flowbite:phone-outline'
        | 'flowbite:phone-solid'
        | 'flowbite:pie-chart-solid'
        | 'flowbite:play-outline'
        | 'flowbite:play-solid'
        | 'flowbite:plus-outline'
        | 'flowbite:printer-outline'
        | 'flowbite:printer-solid'
        | 'flowbite:profile-card-outline'
        | 'flowbite:profile-card-solid'
        | 'flowbite:qr-code-outline'
        | 'flowbite:question-circle-outline'
        | 'flowbite:question-circle-solid'
        | 'flowbite:quote-outline'
        | 'flowbite:quote-solid'
        | 'flowbite:react-solid'
        | 'flowbite:receipt-outline'
        | 'flowbite:receipt-solid'
        | 'flowbite:rectangle-list-outline'
        | 'flowbite:rectangle-list-solid'
        | 'flowbite:reddit-solid'
        | 'flowbite:redo-outline'
        | 'flowbite:redo-solid'
        | 'flowbite:refresh-outline'
        | 'flowbite:reply-all-outline'
        | 'flowbite:reply-all-solid'
        | 'flowbite:reply-outline'
        | 'flowbite:reply-solid'
        | 'flowbite:restore-window-outline'
        | 'flowbite:rocket-outline'
        | 'flowbite:rocket-solid'
        | 'flowbite:rotate-solid'
        | 'flowbite:ruler-combined-outline'
        | 'flowbite:ruler-combined-solid'
        | 'flowbite:sale-percent-outline'
        | 'flowbite:sale-percent-solid'
        | 'flowbite:scale-balanced-outline'
        | 'flowbite:scale-balanced-solid'
        | 'flowbite:school-alt-outline'
        | 'flowbite:school-alt-solid'
        | 'flowbite:school-check-alt-outline'
        | 'flowbite:school-check-alt-solid'
        | 'flowbite:school-check-outline'
        | 'flowbite:school-check-solid'
        | 'flowbite:school-exclamation-alt-outline'
        | 'flowbite:school-exclamation-alt-solid'
        | 'flowbite:school-exclamation-outline'
        | 'flowbite:school-exclamation-solid'
        | 'flowbite:school-flag-alt-outline'
        | 'flowbite:school-flag-alt-solid'
        | 'flowbite:school-flag-outline'
        | 'flowbite:school-flag-solid'
        | 'flowbite:school-lock-alt-outline'
        | 'flowbite:school-lock-alt-solid'
        | 'flowbite:school-lock-outline'
        | 'flowbite:school-lock-solid'
        | 'flowbite:school-outline'
        | 'flowbite:school-solid'
        | 'flowbite:school-xmark-alt-outline'
        | 'flowbite:school-xmark-alt-solid'
        | 'flowbite:school-xmark-outline'
        | 'flowbite:school-xmark-solid'
        | 'flowbite:search-outline'
        | 'flowbite:search-solid'
        | 'flowbite:server-outline'
        | 'flowbite:server-solid'
        | 'flowbite:shapes-outline'
        | 'flowbite:shapes-solid'
        | 'flowbite:share-all-outline'
        | 'flowbite:share-all-solid'
        | 'flowbite:share-nodes-outline'
        | 'flowbite:share-nodes-solid'
        | 'flowbite:shield-check-outline'
        | 'flowbite:shield-check-solid'
        | 'flowbite:shield-outline'
        | 'flowbite:shield-solid'
        | 'flowbite:shopping-bag-outline'
        | 'flowbite:shopping-bag-solid'
        | 'flowbite:shuffle-outline'
        | 'flowbite:shuffle-solid'
        | 'flowbite:sort-horizontal-outline'
        | 'flowbite:sort-outline'
        | 'flowbite:sort-solid'
        | 'flowbite:split-cells-outline'
        | 'flowbite:stackoverflow-solid'
        | 'flowbite:star-half-outline'
        | 'flowbite:star-half-solid'
        | 'flowbite:star-half-stroke-outline'
        | 'flowbite:star-half-stroke-solid'
        | 'flowbite:star-outline'
        | 'flowbite:star-solid'
        | 'flowbite:stop-outline'
        | 'flowbite:stop-solid'
        | 'flowbite:store-outline'
        | 'flowbite:store-solid'
        | 'flowbite:subscript-outline'
        | 'flowbite:sun-outline'
        | 'flowbite:sun-solid'
        | 'flowbite:superscript-outline'
        | 'flowbite:swatchbook-outline'
        | 'flowbite:swatchbook-solid'
        | 'flowbite:t-shirt-outline'
        | 'flowbite:t-shirt-solid'
        | 'flowbite:table-column-outline'
        | 'flowbite:table-column-solid'
        | 'flowbite:table-row-outline'
        | 'flowbite:table-row-solid'
        | 'flowbite:tablet-outline'
        | 'flowbite:tablet-solid'
        | 'flowbite:tag-outline'
        | 'flowbite:tag-solid'
        | 'flowbite:tailwind-solid'
        | 'flowbite:teddy-bear-outline'
        | 'flowbite:teddy-bear-solid'
        | 'flowbite:terminal-outline'
        | 'flowbite:terminal-solid'
        | 'flowbite:text-size-outline'
        | 'flowbite:text-size-solid'
        | 'flowbite:text-slash-outline'
        | 'flowbite:text-slash-solid'
        | 'flowbite:text-underline-outline'
        | 'flowbite:theatre-outline'
        | 'flowbite:theatre-solid'
        | 'flowbite:thumbs-down-outline'
        | 'flowbite:thumbs-down-solid'
        | 'flowbite:thumbs-up-outline'
        | 'flowbite:thumbs-up-solid'
        | 'flowbite:thumbtack-outline'
        | 'flowbite:thumbtack-solid'
        | 'flowbite:ticket-outline'
        | 'flowbite:ticket-solid'
        | 'flowbite:toggle-header-cell-outline'
        | 'flowbite:toggle-header-column-outline'
        | 'flowbite:toggle-header-row-outline'
        | 'flowbite:tools-outline'
        | 'flowbite:tracking-outline'
        | 'flowbite:tracking-solid'
        | 'flowbite:trash-bin-outline'
        | 'flowbite:trash-bin-solid'
        | 'flowbite:truck-clock-outline'
        | 'flowbite:truck-clock-solid'
        | 'flowbite:truck-outline'
        | 'flowbite:truck-solid'
        | 'flowbite:twitter-solid'
        | 'flowbite:undo-outline'
        | 'flowbite:undo-solid'
        | 'flowbite:upload-outline'
        | 'flowbite:upload-solid'
        | 'flowbite:user-add-outline'
        | 'flowbite:user-add-solid'
        | 'flowbite:user-circle-outline'
        | 'flowbite:user-circle-solid'
        | 'flowbite:user-edit-outline'
        | 'flowbite:user-edit-solid'
        | 'flowbite:user-graduate-outline'
        | 'flowbite:user-graduate-solid'
        | 'flowbite:user-headset-outline'
        | 'flowbite:user-headset-solid'
        | 'flowbite:user-outline'
        | 'flowbite:user-remove-outline'
        | 'flowbite:user-remove-solid'
        | 'flowbite:user-settings-outline'
        | 'flowbite:user-settings-solid'
        | 'flowbite:user-solid'
        | 'flowbite:users-group-outline'
        | 'flowbite:users-group-solid'
        | 'flowbite:users-outline'
        | 'flowbite:users-solid'
        | 'flowbite:video-camera-outline'
        | 'flowbite:video-camera-solid'
        | 'flowbite:visa-solid'
        | 'flowbite:volume-down-outline'
        | 'flowbite:volume-down-solid'
        | 'flowbite:volume-mute-outline'
        | 'flowbite:volume-mute-solid'
        | 'flowbite:volume-up-outline'
        | 'flowbite:volume-up-solid'
        | 'flowbite:vue-solid'
        | 'flowbite:wallet-outline'
        | 'flowbite:wallet-solid'
        | 'flowbite:wand-magic-sparkles-outline'
        | 'flowbite:wand-magic-sparkles-solid'
        | 'flowbite:whatsapp-solid'
        | 'flowbite:window-outline'
        | 'flowbite:window-restore-solid'
        | 'flowbite:window-solid'
        | 'flowbite:windows-solid'
        | 'flowbite:x-circle-solid'
        | 'flowbite:x-company-solid'
        | 'flowbite:x-solid'
        | 'flowbite:youtube-solid'
        | 'flowbite:zoom-in-outline'
        | 'flowbite:zoom-in-solid'
        | 'flowbite:zoom-out-outline'
        | 'flowbite:zoom-out-solid'
      )
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'categories';
                value: string | Category;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'categories';
                value: string | Category;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: string | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (string | Post)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  categories?: (string | null) | Category;
  tags?: (string | Tag)[] | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: string;
  tags: string;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: string | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'tags';
        value: string | Tag;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  categories?: T;
  tags?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  color?: T;
  icon?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  tags?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'categories';
                value: string | Category;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'categories';
                value: string | Category;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}